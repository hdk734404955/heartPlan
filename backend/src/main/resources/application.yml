server:
  port: 8080
  servlet:
    context-path: /api

spring:
  application:
    name: heartplan-backend
  
  # 文件上传配置
  servlet:
    multipart:
      max-file-size: 5MB
      max-request-size: 10MB
      file-size-threshold: 512KB
      location: ${java.io.tmpdir}
  
  # 数据库配置
  datasource:
    url: jdbc:mysql://localhost:3306/heartplan?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true&useUnicode=true&characterEncoding=utf8
    username: heartplan
    password: heartplan123
    driver-class-name: com.mysql.cj.jdbc.Driver
    
  # JPA配置
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: true
    database-platform: org.hibernate.dialect.MySQL8Dialect
    
  # Redis配置
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      database: 0
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: -1ms

# JWT配置
jwt:
  secret: ${JWT_SECRET:heartplan-jwt-secret-key-2024-very-long-and-secure}
  expiration: 86400000 # 24小时 (毫秒)
  refresh-expiration: 604800000 # 7天 (毫秒)

# Swagger/OpenAPI配置
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
  info:
    title: HeartPlan API
    description: HeartPlan AI Dating App API Documentation
    version: 1.0.0

# 日志配置
logging:
  level:
    com.heartplan: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/heartplan.log

# 文件上传配置（合并到上面的spring配置中）

# 应用配置
app:
  upload:
    path: ${FILE_UPLOAD_DIR:uploads}
    max-size: 5242880  # 5MB
  file:
    upload-dir: ${FILE_UPLOAD_DIR:uploads}
    base-url: ${FILE_BASE_URL:http://localhost:8080/api/files}

# 跨域配置 - 支持Flutter、React Native、Web等多种开发环境
cors:
  allowed-origins: 
    - http://localhost:3000      # React开发服务器
    - http://localhost:8080      # Flutter Web开发服务器
    - http://localhost:8081      # React Native开发服务器
    - http://localhost:9000      # Flutter Web备用端口
    - http://localhost:19006     # Expo开发服务器
    - http://127.0.0.1:3000      # 本地IP变体
    - http://127.0.0.1:8080      # 本地IP变体
    - http://127.0.0.1:8081      # 本地IP变体
    - http://127.0.0.1:9000      # 本地IP变体
    - http://10.0.2.2:8080       # Android模拟器访问宿主机
    - capacitor://localhost      # Capacitor应用
    - ionic://localhost          # Ionic应用
  allowed-methods:
    - GET
    - POST
    - PUT
    - DELETE
    - OPTIONS
    - PATCH
    - HEAD
  allowed-headers: "*"
  exposed-headers:
    - Authorization
    - Content-Disposition
    - X-Total-Count
  allow-credentials: true
  max-age: 3600