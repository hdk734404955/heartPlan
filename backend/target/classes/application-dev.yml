# 开发环境配置 - 使用H2内存数据库
server:
  port: 8080
  servlet:
    context-path: /api

spring:
  application:
    name: heartplan-backend
  
  # H2内存数据库配置（开发测试用）
  datasource:
    url: jdbc:h2:mem:heartplan;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password: 
    driver-class-name: org.h2.Driver
    
  # H2控制台配置
  h2:
    console:
      enabled: true
      path: /h2-console
      settings:
        web-allow-others: true
    
  # JPA配置
  jpa:
    hibernate:
      ddl-auto: create-drop  # 每次启动重新创建表
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        format_sql: true
    database-platform: org.hibernate.dialect.H2Dialect
    
  # 文件上传配置
  servlet:
    multipart:
      max-file-size: 5MB
      max-request-size: 10MB
      file-size-threshold: 512KB
      location: ${java.io.tmpdir}

# JWT配置
jwt:
  secret: heartplan-jwt-secret-key-2024-very-long-and-secure-for-development
  expiration: 86400000 # 24小时 (毫秒)
  refresh-expiration: 604800000 # 7天 (毫秒)

# Swagger/OpenAPI配置
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
  info:
    title: HeartPlan API (Development)
    description: HeartPlan AI Dating App API Documentation - Development Environment
    version: 1.0.0-dev

# 日志配置
logging:
  level:
    com.heartplan: DEBUG
    org.springframework.security: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    root: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# 应用文件配置
app:
  file:
    upload-dir: ${java.io.tmpdir}/heartplan-uploads
    base-url: http://localhost:8080/api/files

# 跨域配置 - 开发环境允许所有源
cors:
  allowed-origins: 
    - "*"
  allowed-methods:
    - "*"
  allowed-headers: "*"
  allow-credentials: false  # 当允许所有源时，不能设置为true
  max-age: 3600